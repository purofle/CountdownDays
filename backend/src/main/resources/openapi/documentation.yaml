openapi: "3.0.3"
info:
  title: "CountdownDays API"
  description: "CountdownDays API"
  version: "1.0.0"
servers:
- url: "https://CountdownDays"
paths:
  /countdown:
    post:
      description: "add countdown"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/AddCountdownRequest"
        required: true
      responses:
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Record"
  /user:
    post:
      description: "add user"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/AddUserRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
  /user/{id}:
    get:
      description: "get user public information"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Missing or invalid id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponse"
        "404":
          description: "Not Found"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
components:
  schemas:
    AddCountdownRequest:
      type: "object"
      properties:
        telegramId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        date:
          type: "string"
      required:
      - "name"
      - "date"
    Object:
      type: "object"
      properties: {}
    ResultRow:
      type: "object"
      properties:
        fieldIndex:
          type: "object"
      required:
      - "fieldIndex"
    Record:
      type: "object"
      properties:
        writeValues:
          $ref: "#/components/schemas/Object"
        _readValues:
          $ref: "#/components/schemas/ResultRow"
      required:
      - "id"
      - "writeValues"
    AddUserRequest:
      type: "object"
      properties:
        telegramId:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        name:
          type: "string"
      required:
      - "username"
      - "name"
    UserResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        telegramId:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        name:
          type: "string"
      required:
      - "username"
      - "name"